{"data":{"edges":[],"nodes":[{"data":{"node":{"template":{"_type":"Component","attachment":{"trace_as_metadata":true,"file_path":"","fileTypes":["csv","txt","doc","docx","xls","xlsx","pdf","png","jpg","jpeg","gif","zip","rar","ppt","pptx"],"temp_file":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"attachment","value":"","display_name":"Add Attachment","advanced":false,"dynamic":false,"info":"Add an attachment","title_case":false,"type":"file","_input_type":"FileInput"},"action":{"tool_mode":false,"trace_as_metadata":true,"helper_text":"Please connect before selecting actions.","helper_text_metadata":{"variant":"destructive"},"search_category":[],"options":[{"name":"Send Email","metadata":"GMAIL_SEND_EMAIL"},{"name":"Fetch Emails","metadata":"GMAIL_FETCH_EMAILS"},{"name":"Get User Profile","metadata":"GMAIL_GET_PROFILE"},{"name":"Get Email By ID","metadata":"GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID"},{"name":"Create Draft Email","metadata":"GMAIL_CREATE_EMAIL_DRAFT"},{"name":"Get Message By Thread ID","metadata":"GMAIL_FETCH_MESSAGE_BY_THREAD_ID"},{"name":"List Email Threads","metadata":"GMAIL_LIST_THREADS"},{"name":"Reply To Thread","metadata":"GMAIL_REPLY_TO_THREAD"},{"name":"List Email Labels","metadata":"GMAIL_LIST_LABELS"},{"name":"Create Email Label","metadata":"GMAIL_CREATE_LABEL"},{"name":"Get Contacts","metadata":"GMAIL_GET_PEOPLE"},{"name":"Delete Email Label","metadata":"GMAIL_REMOVE_LABEL"},{"name":"Get Attachment","metadata":"GMAIL_GET_ATTACHMENT"}],"limit":1,"required":false,"placeholder":"Select action","show":false,"name":"action","value":"disabled","display_name":"Action","advanced":false,"dynamic":false,"info":"","real_time_refresh":true,"title_case":false,"type":"sortableList","_input_type":"SortableListInput"},"api_key":{"load_from_db":false,"required":true,"placeholder":"","show":true,"name":"api_key","value":"0oc547lz23egc44kjths5n","display_name":"Composio API Key","advanced":false,"input_types":[],"dynamic":false,"info":"","real_time_refresh":true,"title_case":false,"password":true,"type":"str","_input_type":"SecretStrInput"},"attachment_id":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"attachment_id","value":"","display_name":"Attachment ID","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Id of the attachment","title_case":false,"type":"str","_input_type":"MessageTextInput"},"auth_link":{"trace_as_metadata":true,"auth_tooltip":"Connect","required":false,"placeholder":"","show":false,"name":"auth_link","value":"https://backend.composio.dev/api/v3/s/_EfGWaJ0","advanced":false,"dynamic":false,"info":"","title_case":false,"type":"auth","_input_type":"AuthInput"},"bcc":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"bcc","value":"","display_name":"BCC","advanced":true,"input_types":["Message"],"dynamic":false,"info":"Email addresses to BCC (Blind Carbon Copy) in the email, separated by commas","title_case":false,"type":"str","_input_type":"MessageTextInput"},"body":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"body","value":"","display_name":"Body","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Content of the email","title_case":false,"type":"str","_input_type":"MessageTextInput"},"cc":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"cc","value":"","display_name":"CC","advanced":true,"input_types":["Message"],"dynamic":false,"info":"Email addresses to CC (Carbon Copy) in the email, separated by commas","title_case":false,"type":"str","_input_type":"MessageTextInput"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"import json\nfrom typing import Any\n\nfrom composio import Action\n\nfrom langflow.base.composio.composio_base import ComposioBaseComponent\nfrom langflow.inputs import (\n    BoolInput,\n    FileInput,\n    IntInput,\n    MessageTextInput,\n)\nfrom langflow.logging import logger\n\n\nclass ComposioGmailAPIComponent(ComposioBaseComponent):\n    \"\"\"Gmail API component for interacting with Gmail services.\"\"\"\n\n    display_name: str = \"Gmail\"\n    name = \"GmailAPI\"\n    icon = \"Google\"\n    documentation: str = \"https://docs.composio.dev\"\n    app_name = \"gmail\"\n\n    # Gmail-specific actions\n    _actions_data: dict = {\n        \"GMAIL_SEND_EMAIL\": {\n            \"display_name\": \"Send Email\",\n            \"action_fields\": [\n                \"recipient_email\",\n                \"subject\",\n                \"body\",\n                \"cc\",\n                \"bcc\",\n                \"is_html\",\n                \"gmail_user_id\",\n                \"attachment\",\n            ],\n        },\n        \"GMAIL_FETCH_EMAILS\": {\n            \"display_name\": \"Fetch Emails\",\n            \"action_fields\": [\n                \"gmail_user_id\",\n                \"max_results\",\n                \"query\",\n                \"page_token\",\n                \"label_ids\",\n                \"include_spam_trash\",\n            ],\n            \"get_result_field\": True,\n            \"result_field\": \"messages\",\n        },\n        \"GMAIL_GET_PROFILE\": {\n            \"display_name\": \"Get User Profile\",\n            \"action_fields\": [\"gmail_user_id\"],\n        },\n        \"GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID\": {\n            \"display_name\": \"Get Email By ID\",\n            \"action_fields\": [\"message_id\", \"gmail_user_id\", \"format\"],\n            \"get_result_field\": False,\n        },\n        \"GMAIL_CREATE_EMAIL_DRAFT\": {\n            \"display_name\": \"Create Draft Email\",\n            \"action_fields\": [\n                \"recipient_email\",\n                \"subject\",\n                \"body\",\n                \"cc\",\n                \"bcc\",\n                \"is_html\",\n                \"attachment\",\n                \"gmail_user_id\",\n            ],\n        },\n        \"GMAIL_FETCH_MESSAGE_BY_THREAD_ID\": {\n            \"display_name\": \"Get Message By Thread ID\",\n            \"action_fields\": [\"thread_id\", \"page_token\", \"gmail_user_id\"],\n            \"get_result_field\": False,\n        },\n        \"GMAIL_LIST_THREADS\": {\n            \"display_name\": \"List Email Threads\",\n            \"action_fields\": [\"max_results\", \"query\", \"gmail_user_id\", \"page_token\"],\n            \"get_result_field\": True,\n            \"result_field\": \"threads\",\n        },\n        \"GMAIL_REPLY_TO_THREAD\": {\n            \"display_name\": \"Reply To Thread\",\n            \"action_fields\": [\"thread_id\", \"message_body\", \"recipient_email\", \"gmail_user_id\", \"cc\", \"bcc\", \"is_html\"],\n        },\n        \"GMAIL_LIST_LABELS\": {\n            \"display_name\": \"List Email Labels\",\n            \"action_fields\": [\"gmail_user_id\"],\n            \"get_result_field\": True,\n            \"result_field\": \"labels\",\n        },\n        \"GMAIL_CREATE_LABEL\": {\n            \"display_name\": \"Create Email Label\",\n            \"action_fields\": [\"label_name\", \"label_list_visibility\", \"message_list_visibility\", \"gmail_user_id\"],\n        },\n        \"GMAIL_GET_PEOPLE\": {\n            \"display_name\": \"Get Contacts\",\n            \"action_fields\": [\"resource_name\", \"person_fields\"],\n            \"get_result_field\": True,\n            \"result_field\": \"people_data\",\n        },\n        \"GMAIL_REMOVE_LABEL\": {\n            \"display_name\": \"Delete Email Label\",\n            \"action_fields\": [\"label_id\", \"gmail_user_id\"],\n            \"get_result_field\": False,\n        },\n        \"GMAIL_GET_ATTACHMENT\": {\n            \"display_name\": \"Get Attachment\",\n            \"action_fields\": [\"message_id\", \"attachment_id\", \"file_name\", \"gmail_user_id\"],\n        },\n    }\n    _all_fields = {field for action_data in _actions_data.values() for field in action_data[\"action_fields\"]}\n    _bool_variables = {\"is_html\", \"include_spam_trash\"}\n\n    # Combine base inputs with Gmail-specific inputs\n    inputs = [\n        *ComposioBaseComponent._base_inputs,\n        # Email composition fields\n        MessageTextInput(\n            name=\"recipient_email\",\n            display_name=\"Recipient Email\",\n            info=\"Email address of the recipient\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"subject\",\n            display_name=\"Subject\",\n            info=\"Subject of the email\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"body\",\n            display_name=\"Body\",\n            required=True,\n            info=\"Content of the email\",\n            show=False,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"cc\",\n            display_name=\"CC\",\n            info=\"Email addresses to CC (Carbon Copy) in the email, separated by commas\",\n            show=False,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"bcc\",\n            display_name=\"BCC\",\n            info=\"Email addresses to BCC (Blind Carbon Copy) in the email, separated by commas\",\n            show=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"is_html\",\n            display_name=\"Is HTML\",\n            info=\"Specify whether the email body contains HTML content (true/false)\",\n            show=False,\n            value=False,\n            advanced=True,\n        ),\n        # Email retrieval and management fields\n        MessageTextInput(\n            name=\"gmail_user_id\",\n            display_name=\"User ID\",\n            info=\"The user's email address or 'me' for the authenticated user\",\n            show=False,\n            advanced=True,\n        ),\n        IntInput(\n            name=\"max_results\",\n            display_name=\"Max Results\",\n            required=True,\n            info=\"Maximum number of emails to be returned\",\n            show=False,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"message_id\",\n            display_name=\"Message ID\",\n            info=\"The ID of the specific email message\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"thread_id\",\n            display_name=\"Thread ID\",\n            info=\"The ID of the email thread\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"query\",\n            display_name=\"Query\",\n            info=\"Search query to filter emails (e.g., 'from:someone@email.com' or 'subject:hello')\",\n            show=False,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"message_body\",\n            display_name=\"Message Body\",\n            info=\"The body content of the message to be sent\",\n            show=False,\n            advanced=True,\n        ),\n        # Label management fields\n        MessageTextInput(\n            name=\"label_name\",\n            display_name=\"Label Name\",\n            info=\"Name of the Gmail label to create, modify, or filter by\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"label_id\",\n            display_name=\"Label ID\",\n            info=\"The ID of the Gmail label\",\n            show=False,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"label_ids\",\n            display_name=\"Label Ids\",\n            info=\"Comma-separated list of label IDs to filter messages\",\n            show=False,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"label_list_visibility\",\n            display_name=\"Label List Visibility\",\n            info=\"The visibility of the label in the label list in the Gmail web interface\",\n            show=False,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"message_list_visibility\",\n            display_name=\"Message List Visibility\",\n            info=\"The visibility of the label in the message list in the Gmail web interface\",\n            show=False,\n            advanced=True,\n        ),\n        # Pagination and filtering\n        MessageTextInput(\n            name=\"page_token\",\n            display_name=\"Page Token\",\n            info=\"Token for retrieving the next page of results\",\n            show=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"include_spam_trash\",\n            display_name=\"Include messages from Spam/Trash\",\n            info=\"Include messages from SPAM and TRASH in the results\",\n            show=False,\n            value=False,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"format\",\n            display_name=\"Format\",\n            info=\"The format to return the message in. Possible values: minimal, full, raw, metadata\",\n            show=False,\n            advanced=True,\n        ),\n        # Contact management fields\n        MessageTextInput(\n            name=\"resource_name\",\n            display_name=\"Resource Name\",\n            info=\"The resource name of the person to provide information about\",\n            show=False,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"person_fields\",\n            display_name=\"Person fields\",\n            info=\"Fields to return for the person. Multiple fields can be specified by separating them with commas\",\n            show=False,\n            advanced=True,\n        ),\n        # Attachment handling\n        MessageTextInput(\n            name=\"attachment_id\",\n            display_name=\"Attachment ID\",\n            info=\"Id of the attachment\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        MessageTextInput(\n            name=\"file_name\",\n            display_name=\"File name\",\n            info=\"File name of the attachment file\",\n            show=False,\n            required=True,\n            advanced=False,\n        ),\n        FileInput(\n            name=\"attachment\",\n            display_name=\"Add Attachment\",\n            file_types=[\n                \"csv\",\n                \"txt\",\n                \"doc\",\n                \"docx\",\n                \"xls\",\n                \"xlsx\",\n                \"pdf\",\n                \"png\",\n                \"jpg\",\n                \"jpeg\",\n                \"gif\",\n                \"zip\",\n                \"rar\",\n                \"ppt\",\n                \"pptx\",\n            ],\n            info=\"Add an attachment\",\n            show=False,\n        ),\n    ]\n\n    def execute_action(self):\n        \"\"\"Execute action and return response as Message.\"\"\"\n        toolset = self._build_wrapper()\n\n        try:\n            self._build_action_maps()\n            # Get the display name from the action list\n            display_name = self.action[0][\"name\"] if isinstance(self.action, list) and self.action else self.action\n            # Use the display_to_key_map to get the action key\n            action_key = self._display_to_key_map.get(display_name)\n            if not action_key:\n                msg = f\"Invalid action: {display_name}\"\n                raise ValueError(msg)\n\n            enum_name = getattr(Action, action_key)\n            params = {}\n            if action_key in self._actions_data:\n                for field in self._actions_data[action_key][\"action_fields\"]:\n                    value = getattr(self, field)\n\n                    if value is None or value == \"\":\n                        continue\n\n                    if field in [\"cc\", \"bcc\", \"label_ids\"] and value:\n                        value = [item.strip() for item in value.split(\",\")]\n\n                    if field in self._bool_variables:\n                        value = bool(value)\n\n                    params[field] = value\n\n            if params.get(\"gmail_user_id\"):\n                params[\"user_id\"] = params.pop(\"gmail_user_id\")\n\n            result = toolset.execute_action(\n                action=enum_name,\n                params=params,\n            )\n            if not result.get(\"successful\"):\n                message_str = result.get(\"data\", {}).get(\"message\", \"{}\")\n                try:\n                    error_data = json.loads(message_str).get(\"error\", {})\n                except json.JSONDecodeError:\n                    error_data = {\"error\": \"Failed to get exact error details\"}\n                return {\n                    \"code\": error_data.get(\"code\"),\n                    \"message\": error_data.get(\"message\"),\n                    \"errors\": error_data.get(\"errors\", []),\n                    \"status\": error_data.get(\"status\"),\n                }\n\n            result_data = result.get(\"data\", {})\n            actions_data = self._actions_data.get(action_key, {})\n            # If 'get_result_field' is True and 'result_field' is specified, extract the data\n            # using 'result_field'. Otherwise, fall back to the entire 'data' field in the response.\n            if actions_data.get(\"get_result_field\") and actions_data.get(\"result_field\"):\n                result_data = result_data.get(actions_data.get(\"result_field\"), result.get(\"data\", []))\n            if len(result_data) != 1 and not actions_data.get(\"result_field\") and actions_data.get(\"get_result_field\"):\n                msg = f\"Expected a dict with a single key, got {len(result_data)} keys: {result_data.keys()}\"\n                raise ValueError(msg)\n            return result_data  # noqa: TRY300\n        except Exception as e:\n            logger.error(f\"Error executing action: {e}\")\n            display_name = self.action[0][\"name\"] if isinstance(self.action, list) and self.action else str(self.action)\n            msg = f\"Failed to execute {display_name}: {e!s}\"\n            raise ValueError(msg) from e\n\n    def update_build_config(self, build_config: dict, field_value: Any, field_name: str | None = None) -> dict:\n        return super().update_build_config(build_config, field_value, field_name)\n\n    def set_default_tools(self):\n        self._default_tools = {\n            \"GMAIL_SEND_EMAIL\",\n            \"GMAIL_FETCH_EMAILS\",\n        }\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"entity_id":{"tool_mode":true,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":true,"name":"entity_id","value":"default","display_name":"Entity ID","advanced":true,"input_types":["Message"],"dynamic":false,"info":"","title_case":false,"type":"str","_input_type":"MessageTextInput"},"file_name":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"file_name","value":"","display_name":"File name","advanced":false,"input_types":["Message"],"dynamic":false,"info":"File name of the attachment file","title_case":false,"type":"str","_input_type":"MessageTextInput"},"format":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"format","value":"","display_name":"Format","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The format to return the message in. Possible values: minimal, full, raw, metadata","title_case":false,"type":"str","_input_type":"MessageTextInput"},"gmail_user_id":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"gmail_user_id","value":"","display_name":"User ID","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The user's email address or 'me' for the authenticated user","title_case":false,"type":"str","_input_type":"MessageTextInput"},"include_spam_trash":{"tool_mode":false,"trace_as_metadata":true,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"include_spam_trash","value":false,"display_name":"Include messages from Spam/Trash","advanced":true,"dynamic":false,"info":"Include messages from SPAM and TRASH in the results","title_case":false,"type":"bool","_input_type":"BoolInput"},"is_html":{"tool_mode":false,"trace_as_metadata":true,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"is_html","value":false,"display_name":"Is HTML","advanced":true,"dynamic":false,"info":"Specify whether the email body contains HTML content (true/false)","title_case":false,"type":"bool","_input_type":"BoolInput"},"label_id":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"label_id","value":"","display_name":"Label ID","advanced":false,"input_types":["Message"],"dynamic":false,"info":"The ID of the Gmail label","title_case":false,"type":"str","_input_type":"MessageTextInput"},"label_ids":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"label_ids","value":"","display_name":"Label Ids","advanced":true,"input_types":["Message"],"dynamic":false,"info":"Comma-separated list of label IDs to filter messages","title_case":false,"type":"str","_input_type":"MessageTextInput"},"label_list_visibility":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"label_list_visibility","value":"","display_name":"Label List Visibility","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The visibility of the label in the label list in the Gmail web interface","title_case":false,"type":"str","_input_type":"MessageTextInput"},"label_name":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"label_name","value":"","display_name":"Label Name","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Name of the Gmail label to create, modify, or filter by","title_case":false,"type":"str","_input_type":"MessageTextInput"},"max_results":{"tool_mode":false,"trace_as_metadata":true,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"max_results","value":"","display_name":"Max Results","advanced":false,"dynamic":false,"info":"Maximum number of emails to be returned","title_case":false,"type":"int","_input_type":"IntInput"},"message_body":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"message_body","value":"","display_name":"Message Body","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The body content of the message to be sent","title_case":false,"type":"str","_input_type":"MessageTextInput"},"message_id":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"message_id","value":"","display_name":"Message ID","advanced":false,"input_types":["Message"],"dynamic":false,"info":"The ID of the specific email message","title_case":false,"type":"str","_input_type":"MessageTextInput"},"message_list_visibility":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"message_list_visibility","value":"","display_name":"Message List Visibility","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The visibility of the label in the message list in the Gmail web interface","title_case":false,"type":"str","_input_type":"MessageTextInput"},"page_token":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"page_token","value":"","display_name":"Page Token","advanced":true,"input_types":["Message"],"dynamic":false,"info":"Token for retrieving the next page of results","title_case":false,"type":"str","_input_type":"MessageTextInput"},"person_fields":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"person_fields","value":"","display_name":"Person fields","advanced":true,"input_types":["Message"],"dynamic":false,"info":"Fields to return for the person. Multiple fields can be specified by separating them with commas","title_case":false,"type":"str","_input_type":"MessageTextInput"},"query":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"query","value":"","display_name":"Query","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Search query to filter emails (e.g., 'from:someone@email.com' or 'subject:hello')","title_case":false,"type":"str","_input_type":"MessageTextInput"},"recipient_email":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"recipient_email","value":"","display_name":"Recipient Email","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Email address of the recipient","title_case":false,"type":"str","_input_type":"MessageTextInput"},"resource_name":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":false,"placeholder":"","show":false,"name":"resource_name","value":"","display_name":"Resource Name","advanced":true,"input_types":["Message"],"dynamic":false,"info":"The resource name of the person to provide information about","title_case":false,"type":"str","_input_type":"MessageTextInput"},"subject":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"subject","value":"","display_name":"Subject","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Subject of the email","title_case":false,"type":"str","_input_type":"MessageTextInput"},"thread_id":{"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"list_add_label":"Add More","required":true,"placeholder":"","show":false,"name":"thread_id","value":"","display_name":"Thread ID","advanced":false,"input_types":["Message"],"dynamic":false,"info":"The ID of the email thread","title_case":false,"type":"str","_input_type":"MessageTextInput"},"tools_metadata":{"tool_mode":false,"trace_as_metadata":true,"is_list":true,"list_add_label":"Add More","required":false,"placeholder":"","show":true,"name":"tools_metadata","value":[{"name":"GMAIL_FETCH_EMAILS","description":"Fetches a list of email messages from a gmail account, supporting filtering, pagination, and optional full content retrieval.","tags":["GMAIL_FETCH_EMAILS"],"status":true,"display_name":"Fetch Emails","display_description":"Fetches a list of email messages from a gmail account, supporting filtering, pagination, and optional full content retrieval.","readonly":true,"args":{"ids_only":{"default":false,"description":"If true, only returns message IDs from the list API without fetching individual message details. Fastest option for getting just message IDs and thread IDs. Please provide a value of type boolean.","examples":["True","False"],"title":"Ids Only","type":"boolean"},"include_payload":{"default":true,"description":"Set to true to include full message payload (headers, body, attachments); false for metadata only. Please provide a value of type boolean.","examples":["True","False"],"title":"Include Payload","type":"boolean"},"include_spam_trash":{"default":false,"description":"Set to true to include messages from 'SPAM' and 'TRASH'. Please provide a value of type boolean.","examples":["True","False"],"title":"Include Spam Trash","type":"boolean"},"label_ids":{"default":null,"description":"Filter by label IDs; only messages with all specified labels are returned. Common IDs: 'INBOX', 'SPAM', 'TRASH', 'UNREAD', 'STARRED', 'IMPORTANT', 'CATEGORY_PERSONAL', 'CATEGORY_SOCIAL', 'CATEGORY_PROMOTIONS', 'CATEGORY_UPDATES', 'CATEGORY_FORUMS'. Use 'listLabels' action for custom IDs.","examples":["['INBOX', 'UNREAD']","['IMPORTANT']","[]"],"items":{"type":"string"},"title":"Label Ids","type":"array"},"max_results":{"default":1,"description":"Maximum number of messages to retrieve per page. Please provide a value of type integer.","examples":["10","100","500"],"title":"Max Results","type":"integer"},"page_token":{"default":null,"description":"Token for retrieving a specific page, obtained from a previous response's `nextPageToken`. Omit for the first page. Please provide a value of type string.","examples":[],"title":"Page Token","type":"string"},"query":{"default":null,"description":"Gmail advanced search query (e.g., 'from:user subject:meeting'). Supports operators like 'from:', 'to:', 'subject:', 'label:', 'has:attachment', 'is:unread', 'after:YYYY/MM/DD', 'before:YYYY/MM/DD', AND/OR/NOT. Use quotes for exact phrases. Omit for no query filter. Please provide a value of type string.","examples":["from:john@example.com is:unread","subject:meeting has:attachment","after:2024/01/01 before:2024/02/01","is:important OR is:starred","label:work -label:spam"],"title":"Query","type":"string"},"user_id":{"default":"me","description":"User's email address or 'me' for the authenticated user. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"},"verbose":{"default":true,"description":"If false, uses optimized concurrent metadata fetching for faster performance (~75% improvement). If true, uses standard detailed message fetching. When false, only essential fields (subject, sender, recipient, time, labels) are guaranteed. Please provide a value of type boolean.","examples":["True","False"],"title":"Verbose","type":"boolean"}}},{"name":"GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID","description":"Fetches a specific email message by its id, provided the `message id` exists and is accessible to the authenticated `user id`.","tags":["GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID"],"status":false,"display_name":"Get Email By ID","display_description":"Fetches a specific email message by its id, provided the `message id` exists and is accessible to the authenticated `user id`.","readonly":true,"args":{"format":{"default":"full","description":"Format for message content: 'minimal' (ID/labels), 'full' (complete data), 'raw' (base64url string), 'metadata' (ID/labels/headers). Please provide a value of type string.","examples":["minimal","full","raw","metadata"],"title":"Format","type":"string"},"message_id":{"description":"Unique ID of the email message to retrieve, obtainable from actions like 'List Messages'. Please provide a value of type string. This parameter is required.","examples":["xsdfe3264vrfw"],"title":"Message Id","type":"string"},"user_id":{"default":"me","description":"User's email address or 'me' for the authenticated user. Please provide a value of type string.","examples":["user@example.com","me"],"title":"User Id","type":"string"}}},{"name":"GMAIL_GET_ATTACHMENT","description":"Retrieves a specific attachment by id from a message in a user's gmail mailbox, requiring valid message and attachment ids.","tags":["GMAIL_GET_ATTACHMENT"],"status":false,"display_name":"Get Attachment","display_description":"Retrieves a specific attachment by id from a message in a user's gmail mailbox, requiring valid message and attachment ids.","readonly":true,"args":{"attachment_id":{"description":"ID of the attachment to retrieve. Please provide a value of type string. This parameter is required.","examples":["A_PART0.1_18exampleAttachmentId7f9"],"title":"Attachment Id","type":"string"},"file_name":{"description":"Desired filename for the downloaded attachment. Please provide a value of type string. This parameter is required.","examples":["invoice.pdf","report.docx"],"title":"File Name","type":"string"},"message_id":{"description":"Immutable ID of the message containing the attachment. Please provide a value of type string. This parameter is required.","examples":["18exampleMessageId7f9"],"title":"Message Id","type":"string"},"user_id":{"default":"me","description":"User's email address ('me' for authenticated user). Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_REPLY_TO_THREAD","description":"Sends a reply within a specific gmail thread using the original thread's subject, requiring a valid `thread id` and correctly formatted email addresses.","tags":["GMAIL_REPLY_TO_THREAD"],"status":false,"display_name":"Reply To Thread","display_description":"Sends a reply within a specific gmail thread using the original thread's subject, requiring a valid `thread id` and correctly formatted email addresses.","readonly":true,"args":{"bcc":{"default":[],"description":"BCC recipients' email addresses (hidden from other recipients).","examples":[["bcc.recipient@example.com"]],"items":{"type":"string"},"title":"Bcc","type":"array"},"cc":{"default":[],"description":"CC recipients' email addresses.","examples":[["cc.recipient1@example.com","cc.recipient2@example.com"]],"items":{"type":"string"},"title":"Cc","type":"array"},"extra_recipients":{"default":[],"description":"Additional 'To' recipients' email addresses.","examples":[["jane.doe@example.com","another.person@example.com"]],"items":{"type":"string"},"title":"Extra Recipients","type":"array"},"is_html":{"default":false,"description":"Indicates if `message_body` is HTML; if True, body must be valid HTML, if False, body should not contain HTML tags. Please provide a value of type boolean.","examples":["True","False"],"title":"Is Html","type":"boolean"},"message_body":{"description":"Content of the reply message, either plain text or HTML. Please provide a value of type string. This parameter is required.","examples":["Dear Sir, Nice talking to you. Yours respectfully, John"],"title":"Message Body","type":"string"},"recipient_email":{"description":"Primary recipient's email address. Please provide a value of type string. This parameter is required.","examples":["john@doe.com"],"title":"Recipient Email","type":"string"},"thread_id":{"description":"Identifier of the Gmail thread for the reply. Please provide a value of type string. This parameter is required.","examples":["x53r3vdevff"],"title":"Thread Id","type":"string"},"user_id":{"default":"me","description":"Identifier for the user sending the reply; 'me' refers to the authenticated user. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_SEND_EMAIL","description":"Sends an email via gmail api using the authenticated user's google profile display name, requiring `is html=true` if the body contains html and valid `s3key`, `mimetype`, `name` for any attachment.","tags":["GMAIL_SEND_EMAIL"],"status":true,"display_name":"Send Email","display_description":"Sends an email via gmail api using the authenticated user's google profile display name, requiring `is html=true` if the body contains html and valid `s3key`, `mimetype`, `name` for any attachment.","readonly":true,"args":{"attachment":{"default":null,"description":"File to attach; ensure `s3key`, `mimetype`, and `name` are set if provided. Omit or set to null for no attachment.","examples":[],"title":"Attachment","type":"string"},"bcc":{"default":[],"description":"Blind Carbon Copy (BCC) recipients' email addresses.","examples":[["auditor@example.com"]],"items":{"type":"string"},"title":"Bcc","type":"array"},"body":{"description":"Email content (plain text or HTML); if HTML, `is_html` must be `True`. Please provide a value of type string. This parameter is required.","examples":["Hello team, let's discuss the project updates tomorrow.","<h1>Welcome!</h1><p>Thank you for signing up.</p>"],"title":"Body","type":"string"},"cc":{"default":[],"description":"Carbon Copy (CC) recipients' email addresses.","examples":[["manager@example.com","teamlead@example.com"]],"items":{"type":"string"},"title":"Cc","type":"array"},"extra_recipients":{"default":[],"description":"Additional 'To' recipients' email addresses (not Cc or Bcc).","examples":[["jane.doe@example.com","support@example.com"]],"items":{"type":"string"},"title":"Extra Recipients","type":"array"},"is_html":{"default":false,"description":"Set to `True` if the email body contains HTML tags. Please provide a value of type boolean.","examples":[],"title":"Is Html","type":"boolean"},"recipient_email":{"description":"Primary recipient's email address. Please provide a value of type string. This parameter is required.","examples":["john@doe.com"],"title":"Recipient Email","type":"string"},"subject":{"default":null,"description":"Subject line of the email. Please provide a value of type string.","examples":["Project Update Meeting","Your Weekly Newsletter"],"title":"Subject","type":"string"},"user_id":{"default":"me","description":"User's email address; the literal 'me' refers to the authenticated user. Please provide a value of type string.","examples":["user@example.com","me"],"title":"User Id","type":"string"}}},{"name":"GMAIL_CREATE_EMAIL_DRAFT","description":"Creates a gmail email draft, supporting to/cc/bcc, subject, plain/html body (ensure `is html=true` for html), attachments, and threading.","tags":["GMAIL_CREATE_EMAIL_DRAFT"],"status":false,"display_name":"Create Draft Email","display_description":"Creates a gmail email draft, supporting to/cc/bcc, subject, plain/html body (ensure `is html=true` for html), attachments, and threading.","readonly":true,"args":{"attachment":{"default":null,"description":"File to attach to the email.","examples":[],"title":"Attachment","type":"string"},"bcc":{"default":[],"description":"'Bcc' (blind carbon copy) recipient email addresses.","examples":[["bcc.recipient@example.com"]],"items":{"type":"string"},"title":"Bcc","type":"array"},"body":{"description":"Email body content (plain text or HTML); `is_html` must be True if HTML. Please provide a value of type string. This parameter is required.","examples":["Hello Team,\n\nPlease find the attached report for your review.\n\nBest regards,\nYour Name","<h1>Meeting Confirmation</h1><p>This email confirms our meeting scheduled for next Tuesday.</p>"],"title":"Body","type":"string"},"cc":{"default":[],"description":"'Cc' (carbon copy) recipient email addresses.","examples":[["cc.recipient1@example.com","cc.recipient2@example.com"]],"items":{"type":"string"},"title":"Cc","type":"array"},"extra_recipients":{"default":[],"description":"Additional 'To' recipient email addresses.","examples":[["jane.doe@example.com","another.recipient@example.com"]],"items":{"type":"string"},"title":"Extra Recipients","type":"array"},"is_html":{"default":false,"description":"Set to True if `body` is HTML, otherwise the action may fail. Please provide a value of type boolean.","examples":["True","False"],"title":"Is Html","type":"boolean"},"recipient_email":{"description":"Primary recipient's email address. Please provide a value of type string. This parameter is required.","examples":["john.doe@example.com"],"title":"Recipient Email","type":"string"},"subject":{"description":"Email subject line. Please provide a value of type string. This parameter is required.","examples":["Project Update Q3","Meeting Reminder"],"title":"Subject","type":"string"},"thread_id":{"default":null,"description":"ID of an existing Gmail thread to reply to; omit for new thread. Please provide a value of type string.","examples":["17f45ec49a9c3f1b"],"title":"Thread Id","type":"string"},"user_id":{"default":"me","description":"User's email address or 'me' for the authenticated user. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_CREATE_LABEL","description":"Creates a new label with a unique name in the specified user's gmail account.","tags":["GMAIL_CREATE_LABEL"],"status":false,"display_name":"Create Email Label","display_description":"Creates a new label with a unique name in the specified user's gmail account.","readonly":true,"args":{"label_list_visibility":{"default":"labelShow","description":"Controls how the label is displayed in the label list in the Gmail sidebar. Please provide a value of type string.","examples":["labelShow","labelShowIfUnread","labelHide"],"title":"Label List Visibility","type":"string"},"label_name":{"description":"The name for the new label. Please provide a value of type string. This parameter is required.","examples":["Work","Important Documents","Receipts 2024"],"title":"Label Name","type":"string"},"message_list_visibility":{"default":"show","description":"Controls how messages with this label are displayed in the message list. Please provide a value of type string.","examples":["show","hide"],"title":"Message List Visibility","type":"string"},"user_id":{"default":"me","description":"The email address of the user in whose account the label will be created. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_FETCH_MESSAGE_BY_THREAD_ID","description":"Retrieves messages from a gmail thread using its `thread id`, where the thread must be accessible by the specified `user id`.","tags":["GMAIL_FETCH_MESSAGE_BY_THREAD_ID"],"status":false,"display_name":"Get Message By Thread ID","display_description":"Retrieves messages from a gmail thread using its `thread id`, where the thread must be accessible by the specified `user id`.","readonly":true,"args":{"page_token":{"default":"","description":"Opaque page token for fetching a specific page of messages if results are paginated. Please provide a value of type string.","examples":["CiAKGhIKJdealEffectivelyPageToken"],"title":"Page Token","type":"string"},"thread_id":{"description":"Unique ID of the thread, obtainable from actions like 'listThreads' or 'fetchEmails'. Please provide a value of type string. This parameter is required.","examples":["xsdfe3264vrfw"],"title":"Thread Id","type":"string"},"user_id":{"default":"me","description":"The email address of the user. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_GET_PEOPLE","description":"Retrieves either a specific person's details (using `resource name`) or lists 'other contacts' (if `other contacts` is true), with `person fields` specifying the data to return.","tags":["GMAIL_GET_PEOPLE"],"status":false,"display_name":"Get Contacts","display_description":"Retrieves either a specific person's details (using `resource name`) or lists 'other contacts' (if `other contacts` is true), with `person fields` specifying the data to return.","readonly":true,"args":{"other_contacts":{"default":false,"description":"If true, retrieves 'Other Contacts' (people interacted with but not explicitly saved), ignoring `resource_name` and enabling pagination/sync. If false, retrieves information for the single person specified by `resource_name`. Please provide a value of type boolean.","examples":[],"title":"Other Contacts","type":"boolean"},"page_size":{"default":10,"description":"The number of 'Other Contacts' to return per page. Applicable only when `other_contacts` is true. Please provide a value of type integer.","examples":[],"title":"Page Size","type":"integer"},"page_token":{"default":"","description":"An opaque token from a previous response to retrieve the next page of 'Other Contacts' results. Applicable only when `other_contacts` is true and paginating. Please provide a value of type string.","examples":[],"title":"Page Token","type":"string"},"person_fields":{"default":"emailAddresses,names,birthdays,genders","description":"A comma-separated field mask to restrict which fields on the person (or persons) are returned. Consult the Google People API documentation for a comprehensive list of valid fields. Please provide a value of type string.","examples":["names,emailAddresses","emailAddresses,names,birthdays,genders","addresses,phoneNumbers,metadata"],"title":"Person Fields","type":"string"},"resource_name":{"default":"people/me","description":"Resource name identifying the person for whom to retrieve information (like the authenticated user or a specific contact). Used only when `other_contacts` is false. Please provide a value of type string.","examples":["people/me","people/c12345678901234567890","people/102345678901234567890"],"title":"Resource Name","type":"string"},"sync_token":{"default":"","description":"A token from a previous 'Other Contacts' list call to retrieve only changes since the last sync; leave empty for an initial full sync. Applicable only when `other_contacts` is true. Please provide a value of type string.","examples":[],"title":"Sync Token","type":"string"}}},{"name":"GMAIL_GET_PROFILE","description":"Retrieves key gmail profile information (email address, message/thread totals, history id) for a user.","tags":["GMAIL_GET_PROFILE"],"status":false,"display_name":"Get User Profile","display_description":"Retrieves key gmail profile information (email address, message/thread totals, history id) for a user.","readonly":true,"args":{"user_id":{"default":"me","description":"The email address of the Gmail user whose profile is to be retrieved, or the special value 'me' to indicate the currently authenticated user. Please provide a value of type string.","examples":["user@example.com","me"],"title":"User Id","type":"string"}}},{"name":"GMAIL_LIST_LABELS","description":"Retrieves a list of all system and user-created labels for the specified gmail account.","tags":["GMAIL_LIST_LABELS"],"status":false,"display_name":"List Email Labels","display_description":"Retrieves a list of all system and user-created labels for the specified gmail account.","readonly":true,"args":{"user_id":{"default":"me","description":"Identifies the Gmail account (owner's email or 'me' for authenticated user) for which labels will be listed. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_LIST_THREADS","description":"Retrieves a list of email threads from a gmail account, identified by `user id` (email address or 'me'), supporting filtering and pagination.","tags":["GMAIL_LIST_THREADS"],"status":false,"display_name":"List Email Threads","display_description":"Retrieves a list of email threads from a gmail account, identified by `user id` (email address or 'me'), supporting filtering and pagination.","readonly":true,"args":{"max_results":{"default":10,"description":"Maximum number of threads to return. Please provide a value of type integer.","examples":["10","50","100"],"title":"Max Results","type":"integer"},"page_token":{"default":"","description":"Token from a previous response to retrieve a specific page of results; omit for the first page. Please provide a value of type string.","examples":["abcPageToken123"],"title":"Page Token","type":"string"},"query":{"default":"","description":"Filter for threads, using Gmail search query syntax (e.g., 'from:user@example.com is:unread'). Please provide a value of type string.","examples":["is:unread","from:john.doe@example.com","subject:important"],"title":"Query","type":"string"},"user_id":{"default":"me","description":"The user's email address or 'me' to specify the authenticated Gmail account. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}},{"name":"GMAIL_REMOVE_LABEL","description":"Permanently deletes a specific, existing user-created gmail label by its id for a user; cannot delete system labels.","tags":["GMAIL_REMOVE_LABEL"],"status":false,"display_name":"Delete Email Label","display_description":"Permanently deletes a specific, existing user-created gmail label by its id for a user; cannot delete system labels.","readonly":true,"args":{"label_id":{"description":"ID of the user-created label to be permanently deleted; must exist and not be a system label. Please provide a value of type string. This parameter is required.","examples":["Label_123","Label_xyz789"],"title":"Label Id","type":"string"},"user_id":{"default":"me","description":"User's email address or 'me' for the authenticated user. Please provide a value of type string.","examples":["me","user@example.com"],"title":"User Id","type":"string"}}}],"display_name":"Actions","advanced":false,"dynamic":false,"info":"Modify tool names and descriptions to help agents understand when to use each tool.","real_time_refresh":true,"title_case":false,"type":"tools","_input_type":"ToolsInput"}},"icon":"Google","base_classes":["DataFrame"],"display_name":"Gmail","documentation":"https://docs.composio.dev","minimized":false,"custom_fields":{},"output_types":[],"pinned":false,"conditional_paths":[],"frozen":false,"outputs":[{"types":["Tool"],"selected":"Tool","name":"component_as_tool","hidden":false,"display_name":"Toolset","method":"to_toolkit","value":"__UNDEFINED__","cache":true,"required_inputs":null,"allows_loop":false,"options":null,"tool_mode":true}],"field_order":["entity_id","api_key","auth_link","action","recipient_email","subject","body","cc","bcc","is_html","gmail_user_id","max_results","message_id","thread_id","query","message_body","label_name","label_id","label_ids","label_list_visibility","message_list_visibility","page_token","include_spam_trash","format","resource_name","person_fields","attachment_id","file_name","attachment"],"beta":false,"legacy":false,"edited":false,"metadata":{},"tool_mode":true,"category":"composio","key":"GmailAPI","score":2.220446049250313e-16,"lf_version":"1.4.2","official":false},"showNode":true,"type":"GmailAPI","id":"GmailAPI-oL8yR"},"id":"GmailAPI-oL8yR","position":{"x":0,"y":0},"type":"genericNode"}],"viewport":{"x":1,"y":1,"zoom":1}},"description":"","name":"Gmail","id":"GmailAPI-oL8yR","is_component":true,"last_tested_version":"1.4.2"}